/*
   Copyright 2018 Amadeus SAS

   Licensed under the Apache License, Version 2.0 (the "License");
   you may not use this file except in compliance with the License.
   You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.

*/

// Generated file, do not modify manually!

// This file was automatically generated by lister-gen

package v1

import (
	v1 "github.com/amadeusitgroup/workflow-controller/pkg/api/daemonsetjob/v1"
	"k8s.io/apimachinery/pkg/api/errors"
	"k8s.io/apimachinery/pkg/labels"
	"k8s.io/client-go/tools/cache"
)

// DaemonSetJobLister helps list DaemonSetJobs.
type DaemonSetJobLister interface {
	// List lists all DaemonSetJobs in the indexer.
	List(selector labels.Selector) (ret []*v1.DaemonSetJob, err error)
	// DaemonSetJobs returns an object that can list and get DaemonSetJobs.
	DaemonSetJobs(namespace string) DaemonSetJobNamespaceLister
	DaemonSetJobListerExpansion
}

// daemonSetJobLister implements the DaemonSetJobLister interface.
type daemonSetJobLister struct {
	indexer cache.Indexer
}

// NewDaemonSetJobLister returns a new DaemonSetJobLister.
func NewDaemonSetJobLister(indexer cache.Indexer) DaemonSetJobLister {
	return &daemonSetJobLister{indexer: indexer}
}

// List lists all DaemonSetJobs in the indexer.
func (s *daemonSetJobLister) List(selector labels.Selector) (ret []*v1.DaemonSetJob, err error) {
	err = cache.ListAll(s.indexer, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DaemonSetJob))
	})
	return ret, err
}

// DaemonSetJobs returns an object that can list and get DaemonSetJobs.
func (s *daemonSetJobLister) DaemonSetJobs(namespace string) DaemonSetJobNamespaceLister {
	return daemonSetJobNamespaceLister{indexer: s.indexer, namespace: namespace}
}

// DaemonSetJobNamespaceLister helps list and get DaemonSetJobs.
type DaemonSetJobNamespaceLister interface {
	// List lists all DaemonSetJobs in the indexer for a given namespace.
	List(selector labels.Selector) (ret []*v1.DaemonSetJob, err error)
	// Get retrieves the DaemonSetJob from the indexer for a given namespace and name.
	Get(name string) (*v1.DaemonSetJob, error)
	DaemonSetJobNamespaceListerExpansion
}

// daemonSetJobNamespaceLister implements the DaemonSetJobNamespaceLister
// interface.
type daemonSetJobNamespaceLister struct {
	indexer   cache.Indexer
	namespace string
}

// List lists all DaemonSetJobs in the indexer for a given namespace.
func (s daemonSetJobNamespaceLister) List(selector labels.Selector) (ret []*v1.DaemonSetJob, err error) {
	err = cache.ListAllByNamespace(s.indexer, s.namespace, selector, func(m interface{}) {
		ret = append(ret, m.(*v1.DaemonSetJob))
	})
	return ret, err
}

// Get retrieves the DaemonSetJob from the indexer for a given namespace and name.
func (s daemonSetJobNamespaceLister) Get(name string) (*v1.DaemonSetJob, error) {
	obj, exists, err := s.indexer.GetByKey(s.namespace + "/" + name)
	if err != nil {
		return nil, err
	}
	if !exists {
		return nil, errors.NewNotFound(v1.Resource("daemonsetjob"), name)
	}
	return obj.(*v1.DaemonSetJob), nil
}
